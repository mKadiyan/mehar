apply from: rootProject.file('gradle/integTest.gradle')
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'jetty'
dependencies {
	//compile "org.eclipse.jetty:jetty-server:$jetty9Version"
	//compile "org.eclipse.jetty:jetty-servlet:$jetty9Version"
	//compile "org.eclipse.jetty:jetty-webapp:$jetty9Version"
	//compile "org.eclipse.jetty:jetty-servlets:$jetty9Version"
	//compile "org.eclipse.jetty:jetty-jsp:$jetty9Version"
	//compile "javax.servlet:jstl:1.2"
	compile "org.hibernate:hibernate-core:4.3.10.Final"
	compile "mysql:mysql-connector-java:5.1.6"
	compile 'com.googlecode.json-simple:json-simple:1.1'
	compile "javax.servlet:servlet-api:2.5"
}

war {

	doFirst {
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            println "it's Windows"
            tasks.npm.execute();
        } else {
            println "it's not Windows"
//            def proc  = "npm install".execute();
//            proc.waitFor();
//            println "return code: ${ proc.exitValue()}"
//            println "stderr: ${proc.err.text}"
//            println "stdout: ${proc.in.text}"
             tasks.npmLinux.execute();
        }

	}

	}

task npm(type: Exec) {
    group = "Build"
    description = "Installs all Node.js dependencies defined in package.json"
    commandLine = ["npm.cmd", "install"]
    inputs.file "package.json"
    outputs.dir "node_modules"
}

task npmLinux(type: Exec) {
    group = "Build"
    description = "Installs all Node.js dependencies defined in package.json"
    commandLine = ["npm", "install"]
    inputs.file "package.json"
    outputs.dir "node_modules"
}


